{
    "info": {
        "name": "E-Commerce API",
        "description": "Complete API collection for E-Commerce platform with authentication, products, categories, and user management",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "variable": [
        {
            "key": "baseURL",
            "value": "http://localhost:5000/api",
            "type": "string"
        },
        {
            "key": "accessToken",
            "value": "",
            "type": "string"
        },
        {
            "key": "refreshToken",
            "value": "",
            "type": "string"
        },
        {
            "key": "userId",
            "value": "",
            "type": "string"
        },
        {
            "key": "productId",
            "value": "",
            "type": "string"
        },
        {
            "key": "categoryId",
            "value": "",
            "type": "string"
        }
    ],
    "item": [
        {
            "name": "Authentication",
            "item": [
                {
                    "name": "Register User",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status is 201\", () => {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has required fields\", () => {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response.success).to.be.true;",
                                    "    pm.expect(response.data).to.have.property('user');",
                                    "    pm.expect(response.data).to.have.property('accessToken');",
                                    "    pm.expect(response.data).to.have.property('refreshToken');",
                                    "});",
                                    "",
                                    "// Save tokens",
                                    "const response = pm.response.json();",
                                    "pm.environment.set(\"accessToken\", response.data.accessToken);",
                                    "pm.environment.set(\"refreshToken\", response.data.refreshToken);",
                                    "pm.environment.set(\"userId\", response.data.user.userId);"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"Test@123\",\n  \"role\": \"customer\",\n  \"phoneNumber\": \"1234567890\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseURL}}/auth/register",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "auth",
                                "register"
                            ]
                        }
                    }
                },
                {
                    "name": "Login",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status is 200\", () => {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Login successful\", () => {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response.success).to.be.true;",
                                    "    pm.expect(response.data.accessToken).to.be.a('string');",
                                    "});",
                                    "",
                                    "// Save tokens",
                                    "const response = pm.response.json();",
                                    "pm.environment.set(\"accessToken\", response.data.accessToken);",
                                    "pm.environment.set(\"refreshToken\", response.data.refreshToken);"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"admin@ecommerce.com\",\n  \"password\": \"Admin@123\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseURL}}/auth/login",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "auth",
                                "login"
                            ]
                        }
                    }
                },
                {
                    "name": "Refresh Token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status is 200\", () => {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "const response = pm.response.json();",
                                    "pm.environment.set(\"accessToken\", response.data.accessToken);"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseURL}}/auth/refresh-token",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "auth",
                                "refresh-token"
                            ]
                        }
                    }
                },
                {
                    "name": "Logout",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status is 200\", () => {",
                                    "    pm.response.to.have.status(200);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseURL}}/auth/logout",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "auth",
                                "logout"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Categories",
            "item": [
                {
                    "name": "Get All Categories",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status is 200\", () => {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response is array\", () => {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response.data).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseURL}}/categories",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "categories"
                            ]
                        }
                    }
                },
                {
                    "name": "Create Category (Admin)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status is 201\", () => {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "const response = pm.response.json();",
                                    "pm.environment.set(\"categoryId\", response.data.categoryId);"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"Test Category\",\n  \"description\": \"This is a test category\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseURL}}/categories",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "categories"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Category by ID",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status is 200\", () => {",
                                    "    pm.response.to.have.status(200);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseURL}}/categories/{{categoryId}}",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "categories",
                                "{{categoryId}}"
                            ]
                        }
                    }
                },
                {
                    "name": "Update Category (Admin)",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"description\": \"Updated description\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseURL}}/categories/{{categoryId}}",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "categories",
                                "{{categoryId}}"
                            ]
                        }
                    }
                },
                {
                    "name": "Delete Category (Admin)",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseURL}}/categories/{{categoryId}}",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "categories",
                                "{{categoryId}}"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Products",
            "item": [
                {
                    "name": "Get All Products",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status is 200\", () => {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Has pagination\", () => {",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response.data).to.have.property('pagination');",
                                    "    pm.expect(response.data.products).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseURL}}/products?page=1&limit=20",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "products"
                            ],
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "key": "limit",
                                    "value": "20"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "Search Products",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseURL}}/products?search=laptop&sortBy=price&order=asc",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "products"
                            ],
                            "query": [
                                {
                                    "key": "search",
                                    "value": "laptop"
                                },
                                {
                                    "key": "sortBy",
                                    "value": "price"
                                },
                                {
                                    "key": "order",
                                    "value": "asc"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "Get Product by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseURL}}/products/{{productId}}",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "products",
                                "{{productId}}"
                            ]
                        }
                    }
                },
                {
                    "name": "Create Product (Seller)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status is 201\", () => {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "const response = pm.response.json();",
                                    "pm.environment.set(\"productId\", response.data.productId);"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "name",
                                    "value": "Test Product",
                                    "type": "text"
                                },
                                {
                                    "key": "description",
                                    "value": "This is a test product with at least 50 characters to meet the validation requirements.",
                                    "type": "text"
                                },
                                {
                                    "key": "price",
                                    "value": "99.99",
                                    "type": "text"
                                },
                                {
                                    "key": "stock",
                                    "value": "100",
                                    "type": "text"
                                },
                                {
                                    "key": "sku",
                                    "value": "TEST-001",
                                    "type": "text"
                                },
                                {
                                    "key": "categoryId",
                                    "value": "{{categoryId}}",
                                    "type": "text"
                                },
                                {
                                    "key": "specifications",
                                    "value": "{\"Brand\": \"Test\", \"Color\": \"Blue\"}",
                                    "type": "text"
                                },
                                {
                                    "key": "tags",
                                    "value": "[\"test\", \"product\"]",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseURL}}/products",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "products"
                            ]
                        }
                    }
                },
                {
                    "name": "Update Product",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "price",
                                    "value": "89.99",
                                    "type": "text"
                                },
                                {
                                    "key": "stock",
                                    "value": "150",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseURL}}/products/{{productId}}",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "products",
                                "{{productId}}"
                            ]
                        }
                    }
                },
                {
                    "name": "Delete Product",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseURL}}/products/{{productId}}",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "products",
                                "{{productId}}"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "User Profile",
            "item": [
                {
                    "name": "Get Profile",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status is 200\", () => {",
                                    "    pm.response.to.have.status(200);",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseURL}}/users/profile",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "users",
                                "profile"
                            ]
                        }
                    }
                },
                {
                    "name": "Update Profile",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"firstName\": \"Updated\",\n  \"lastName\": \"Name\",\n  \"phoneNumber\": \"9999999999\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseURL}}/users/profile",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "users",
                                "profile"
                            ]
                        }
                    }
                },
                {
                    "name": "Change Password",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"currentPassword\": \"Admin@123\",\n  \"newPassword\": \"NewAdmin@123\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseURL}}/users/change-password",
                            "host": [
                                "{{baseURL}}"
                            ],
                            "path": [
                                "users",
                                "change-password"
                            ]
                        }
                    }
                }
            ]
        }
    ]
}